<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
            targetRuntime: 执行生成的逆向工程的版本
                    MyBatis3Simple: 生成基本的CRUD（清新简洁版,只有增,删,改,查询所有,根据ID查询 5个方法）
                    MyBatis3: 生成带条件的CRUD（奢华尊享版）
     -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin">
            <!-- 可配置一些参数，如排除某些属性 -->
            <!--                <property name="excludeFields" value="id"/>-->
        </plugin>


        <!-- 自定义注释 -->
        <commentGenerator>
            <!-- 禁用注释生成 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 如果设置为true，则生成的注释中不会包含日期信息。默认值为false -->
            <property name="suppressDate" value="false"/>
            <!--如果设置为true，则会将数据库表和列的注释作为 Java 代码中的备注（remark）注释添加到生成的实体类中。默认值为false-->
            <property name="addRemarkComments" value="false"/>
        </commentGenerator>

        <!-- 数据库的连接信息 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8"
                        userId="root"
                        password="shiguang">
        </jdbcConnection>
        <!-- javaBean的生成策略(实体类)-->
        <javaModelGenerator targetPackage="com.shiguang.mybatis.pojo" targetProject=".\src\main\java">
            <!-- 是否能够使用子包,一个.代表一层目录 -->
            <property name="enableSubPackages" value="true" />
            <!-- 去除字符串前后空格,数据库字段名前后有空格时可以自动去除 -->
            <property name="trimStrings" value="true" />
            <!-- 设置是否生成有参构造方法 -->
            <property name="constructorBased" value="true"/>
            <!-- 设置是否生成无参构造方法 -->
            <property name="enableSubPackages" value="true"/>
            <property name="immutable" value="false"/>
            <!-- 设置是否生成 toString 方法 -->
            <property name="toStringGenerator" value="toStringBuilder"/>
        </javaModelGenerator>
        <!-- SQL映射文件的生成策略(xxxMapper.xml) -->
        <sqlMapGenerator targetPackage="com.shiguang.mybatis.mapper"  targetProject=".\src\main\resources">
            <!-- 是否能够使用子包,一个.代表一层目录 -->
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>
        <!-- Mapper接口的生成策略(xxxMapper.java) -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.shiguang.mybatis.mapper"  targetProject=".\src\main\java">
            <!-- 是否能够使用子包,一个.代表一层目录 -->
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>
        <!-- 逆向分析的表 -->
        <!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName -->
        <!-- domainObjectName属性指定生成出来的实体类的类名 -->
        <!--        <table tableName="t_emp" domainObjectName="Emp"/>-->
        <table tableName="t_dept" domainObjectName="Dept"/>
    </context>
</generatorConfiguration>